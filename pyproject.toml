### [project] section: 
###     see https://peps.python.org/pep-0621/
### [build-system] section: 
###     see https://peps.python.org/pep-0517/
###     see https://peps.python.org/pep-0518/
### see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "amaranth-stuff-by-sporniket"
version = "0.0.4"
description = "A curated collection of code written using the amaranth hdl"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["amaranth","amaranth-hdl","nmigen", "hdl", "fpga"]
license = {text = "LGPLv3+"}
authors = [{name="Sporniket", email="sporniket.studio@gmail.com"}]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
]
dependencies = [
    'amaranth[builtin-yosys] @ git+https://github.com/amaranth-lang/amaranth@v0.5.2',
    'amaranth-boards @ git+https://github.com/amaranth-lang/amaranth-boards@19b97324ecf9111c5d16377af79f82aad761c476',
    'importlib-metadata; python_version>"3.8"',
]

[project.urls]
homepage = "https://github.com/sporniket/amaranth-stuff"
#TODO documentation = "https://readthedocs.org"
repository = "https://github.com/sporniket/amaranth-stuff"
bug-tracker = "https://github.com/sporniket/amaranth-stuff/issues"

[tool.pdm.scripts]
_.env_file = ".env.toolchain"
# --- bleeding edge dependencies update ---
display-dependency-updates = "python3 display-dependency-updates.py"
# --- cleaning
_clean_tons_of_files = "python3 reclean.py"
clean = { composite = [ "_clean_tons_of_files" ] }
# --- linting ---
_organize_imports = "python3 -m removestar -i ."
_reformat = "python3 -m black ."
reformat = { composite = [ "_organize_imports", "_reformat" ] }
_lint_errors = "python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics"
_lint_warnings = "python3 -m flake8 . --count --ignore=E266 --exit-zero --max-complexity=10 --max-line-length=127 --statistics"
lint_report = { composite = [ "_lint_errors", "_lint_warnings" ] }
lint_ci = { composite = [ "reformat", "_lint_errors" ] }
lint = { composite = [ "reformat", "lint_report" ] }
# --- building ---
_build_only = "python3 -m pdm build"
_install = "python3 install.py"
make = { composite = ["_build_only"] }
make_install = { composite = ["_build_only","_install"] }
# --- test & coverage ---
_coverage_pytest = "python3 -m coverage run --source=amaranth_stuff --branch -m pytest"
_coverage_report = "python3 -m coverage report -m"
_coverage_html = "python3 -m coverage html"
_ci_only = { composite = ["_coverage_pytest","_coverage_report","_coverage_html"] }
ci = { composite = ["clean", "lint_ci", "_ci_only"] }
_pytest = "python3 -m pytest -v"
test = { composite = ["clean", "reformat", "_pytest"] }

[tool.pdm.dev-dependencies]
lint = [
    "black>=23.9.1",
    "flake8>=6.1.0",
    "removestar>=1.5",
]
ci = [
    "pytest>=7.4.2",
    "coverage>=7.3.2",
    "yowasp-yosys>=0.34.0.0.post591",
]
scripting = [
    "rich>=13.6.0",
]
build = [
    "pdm>=2.9.3",
    "pip>=23.2.1",
    "twine>=4.0.2",
]
